/****************************************************************************
**
** Copyright (C) 2016 Pelagicore AG
** Contact: https://www.qt.io/licensing/
**
** This file is part of the Pelagicore Application Manager.
**
** $QT_BEGIN_LICENSE:GPL-QTAS$
** Commercial License Usage
** Licensees holding valid commercial Qt Automotive Suite licenses may use
** this file in accordance with the commercial license agreement provided
** with the Software or, alternatively, in accordance with the terms
** contained in a written agreement between you and The Qt Company.  For
** licensing terms and conditions see https://www.qt.io/terms-conditions.
** For further information use the contact form at https://www.qt.io/contact-us.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 3 or (at your option) any later version
** approved by the KDE Free Qt Foundation. The licenses are as published by
** the Free Software Foundation and appearing in the file LICENSE.GPL3
** included in the packaging of this file. Please review the following
** information to ensure the GNU General Public License requirements will
** be met: https://www.gnu.org/licenses/gpl-3.0.html.
**
** $QT_END_LICENSE$
**
** SPDX-License-Identifier: GPL-3.0
**
****************************************************************************/

/*!

\page appman-packager.html
\title Packager

The \c{application-packager} is a command-line utility that is used by the developer to manage installation
packages. It could also be used as a signing and verification tool on a app-store backend server.

At the moment the application-manager supports unsigned packages, packages that are signed by the
developer only (development mode) and packages that are signed by a trusted app-store. The
\c{application-packager} can create all these variations with the following commands:

\table
\header
    \li Action
    \li Options
    \li Description
\row
    \li \span {style="white-space: nowrap"} {\c create-package}
    \li \c{<package> <source directory>}
    \li Create a new package named \a package from the application in \a{source directory}. The
        directory needs to at least contain an \l{Manifest definition}{\c info.yaml} as well as an
        \c{icon.png} file.
        The tool will do a sanity-check on the \c info.yaml file before actually creating the
        package.
        All normal files and directories in the source directory will be copied into package. The
        only meta-data that is copied from the filesystem is the filename, and the user's
        eXecutable-bit.
\row
    \li \span {style="white-space: nowrap"} {\c dev-sign-package}
    \li \c{<package> <signed-package> <certificate> <password>}
    \li Takes the input \c package, adds a developer signature and writes the output to \c signed-package.
        You need to supply a \c certificate in P12 format together with a \c password matching the
        certificate.
\row
    \li \span {style="white-space: nowrap"} {\c dev-verify-package}
    \li \c{<package> <ca-certificates...>}
    \li Reads the input \c package and tries to verify the developer signature using the given \c
        ca-certificates.
\row
    \li \span {style="white-space: nowrap"} {\c store-sign-package}
    \li \c{<package> <signed-package> <certificate> <password> [device-id]}
    \li Takes the input \c package, adds a store signature and writes the output to \c signed-package.
        You need to supply a \c certificate in P12 format together with a \c password matching the
        certificate. If you specify the optional \c device-id, the resulting package can only be
        installed on this specific device.
\row
    \li \span {style="white-space: nowrap"} {\c store-verify-package}
    \li \c{<package> <ca-certificates...> <device-id>}
    \li Reads the input \c package and tries to verify the store signature using the given \c
        ca-certificates.

\endtable

The application-packager naturally supports the standard Unix \c{--help} command-line option.

*/
